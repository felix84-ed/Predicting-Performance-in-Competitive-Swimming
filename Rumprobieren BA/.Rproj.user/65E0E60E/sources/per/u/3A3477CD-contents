# Installieren und Laden des 'dplyr'-Pakets für Datenmanipulation
if (!requireNamespace("dplyr", quietly = TRUE)) {
  install.packages("dplyr")
}
library(dplyr)

# Daten einlesen
df <- read.csv("/Users/fbongarz/Library/Mobile Documents/com~apple~CloudDocs/02_Studium/Bachelor-Arbeit/Data/updated_gesamt_daten.csv", sep = ",")


# Neue Spalte hinzufügen und mit 0 initialisieren
df$eleven_y_top100 <- 0

# Spalte für 11-jährige Sportler in der Disziplin 100m Freistil auf 1 setzen
df <- df %>%
  mutate(eleven_y_top100 = ifelse(Alter == 11 & Streckenlänge == "100" & Disziplin == "F", 1, eleven_y_top100))

# Liste der 11-jährigen Sportler, die in der Top 100 sind
eleven_y_top100_athletes <- df %>%
  filter(eleven_y_top100 == 1) %>%
  select(name, Jg)

# Gesamtanzahl der 11-jährigen Sportler in der Top 100
total_athletes_11 = nrow(eleven_y_top100_athletes)

# Zählen und Prozentsatz berechnen, wie viele dieser Sportler in den folgenden Jahren noch in der Top 100 sind
for (age in 12:18) {
  count <- df %>%
    filter(Alter == age, Streckenlänge == "100", Disziplin == "F") %>%
    semi_join(eleven_y_top100_athletes, by = c("name", "Jg")) %>%
    nrow()
  
  percentage <- (count / total_athletes_11) * 100
  cat("Prozentsatz der Sportler mit", age, "Jahren:", round(percentage, 2), "%\n")
}



# Neue Spalte hinzufügen und mit 0 initialisieren
df$eleven_y_top100_200L <- 0

# Spalte für 11-jährige Sportler in der Disziplin 200m Lagen auf 1 setzen
df <- df %>%
  mutate(eleven_y_top100_200L = ifelse(Alter == 11 & Streckenlänge == "200" & Disziplin == "L", 1, eleven_y_top100_200L))

# Liste der 11-jährigen Sportler, die in der Top 100 sind
eleven_y_top100_athletes_200L <- df %>%
  filter(eleven_y_top100_200L == 1) %>%
  select(name, Jg)

# Gesamtanzahl der 11-jährigen Sportler in der Top 100 200L
total_athletes_11_200L = nrow(eleven_y_top100_athletes_200L)

# Zählen und Prozentsatz berechnen, wie viele dieser Sportler in den folgenden Jahren noch in der Top 100 sind
for (age in 12:18) {
  count <- df %>%
    filter(Alter == age, Streckenlänge == "200", Disziplin == "L") %>%
    semi_join(eleven_y_top100_athletes_200L, by = c("name", "Jg")) %>%
    nrow()
  
  percentage <- (count / total_athletes_11) * 100
  cat("Prozentsatz der Sportler mit", age, "Jahren:", round(percentage, 2), "%\n")
}
# Neue Spalte hinzufügen und mit 0 initialisieren
df$eleven_y_top20 <- 0

# Spalte für 11-jährige Sportler in der Disziplin 100m Freistil auf 1 setzen, wenn sie in den Top 20 sind
df <- df %>%
  mutate(eleven_y_top20 = ifelse(Alter == 11 & Gesamtrang <= 20, 1, eleven_y_top20))

# Liste der 11-jährigen Sportler, die in den Top 20 sind
eleven_y_top20_athletes <- df %>%
  filter(eleven_y_top20 == 1) %>%
  select(name, Jg)

# Gesamtanzahl der 11-jährigen Sportler in den Top 20
total_athletes_11_top20 = nrow(eleven_y_top20_athletes)

# Zählen und Prozentsatz berechnen, wie viele dieser Sportler in den folgenden Jahren noch in den Top 20 sind
for (age in 12:18) {
  count <- df %>%
    filter(Alter == age, Gesamtrang <= 20) %>%
    semi_join(eleven_y_top20_athletes, by = c("name", "Jg")) %>%
    nrow()
  
  percentage <- (count / total_athletes_11_top20) * 100
  cat("Prozentsatz der Top 20 Sportler mit", age, "Jahren:", round(percentage, 2), "%\n")
}

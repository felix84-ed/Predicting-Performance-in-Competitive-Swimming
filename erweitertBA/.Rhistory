# Liste der benötigten Pakete
pakete <- c("dplyr", "tidyr", "ggplot2", "lubridate", "readr")
# Installiere fehlende Pakete
neue_pakete <- pakete[!(pakete %in% installed.packages()[,"Package"])]
if(length(neue_pakete)) install.packages(neue_pakete)
# Lade die Pakete
lapply(pakete, require, character.only = TRUE)
# Funktion zum Umwandeln von Zeitformat mm:ss,0 oder mm:ss,00 in Sekunden
convert_to_seconds <- function(time_str) {
time_str <- gsub(",", ".", time_str)
time_parts <- strsplit(time_str, ":")[[1]]
minutes <- as.numeric(time_parts[1])
seconds <- as.numeric(time_parts[2])
total_seconds <- minutes * 60 + seconds
formatted_seconds <- formatC(total_seconds, format = "f", digits = 2, decimal.mark = ',')
return(formatted_seconds)
}
# Basispfad
basis_pfad <- "/Users/fbongarz/Library/Mobile Documents/com~apple~CloudDocs/02_Studium/Bachelor-Arbeit/Daten"
hauptordner <- list.dirs(basis_pfad, recursive = FALSE)
for(ordner in hauptordner) {
alter_ordner <- list.dirs(ordner, recursive = FALSE)
for(ao in alter_ordner) {
csv_dateien <- list.files(path = ao, pattern = "*.csv", full.names = TRUE)
daten_liste <- lapply(csv_dateien, function(file) {
data <- read.csv(file, sep = ";", fileEncoding = "UTF-8")
data <- data %>% select(-Verein, -7)
monate_dict <- c("Jan" = 1, "Feb" = 2, "Mär" = 3, "Apr" = 4, "Mai" = 5, "Jun" = 6, "Jul" = 7, "Aug" = 8, "Sep" = 9, "Okt" = 10, "Nov" = 11, "Dez" = 12)
data$Monat <- sapply(strsplit(as.character(data$Datum), " "), function(x) monate_dict[x[1]])
data$Jahr <- sapply(strsplit(as.character(data$Datum), " "), function(x) as.integer(paste0("20", x[2])))
data <- data %>% select(-Datum)
alter <- sub(".*_", "", ao)
data$Alter <- as.integer(alter)
data <- data %>% filter(Alter + Jg == Jahr)
data$Zeit <- sapply(data$Zeit, convert_to_seconds)
data$Rang <- ave(data$Zeit, data$Jahr, FUN = function(x) rank(x, ties.method = "average"))
return(data)
})
daten_zusammengeführt <- do.call(rbind, daten_liste)
daten_zusammengeführt$Gesamtrang <- rank(daten_zusammengeführt$Zeit, ties.method = "average")
speicher_pfad <- file.path(ao, "zusammengefuehrt.csv")
write.csv(daten_zusammengeführt, speicher_pfad, row.names = FALSE)
}
}
cat("Datenpipeline geschlossen.\n")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/02_Studium/Bachelor-Arbeit/BachelorArbeit/erweitertBA/Schritt 1.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/02_Studium/Bachelor-Arbeit/BachelorArbeit/erweitertBA/Schritt 1.R", echo=TRUE)
